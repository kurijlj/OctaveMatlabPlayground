function y = Mexican_Hat_Function(x, x_max, y_max, x_min)
    %% -------------------------------------------------------------------------
    %%
    %% Function: Mexican_Hat_Function(x, x_max, y_max, x_min)
    %%
    %% -------------------------------------------------------------------------
    %
    %% Use:
    %       - y = Mexican_Hat_Function(x, x_max, y_max, x_min)
    %
    %% Description:
    %       This function returns the value of the Mexican Hat Function at
    %       the point x, or at the points in the vector x.
    %
    %% Function parameters:
    %       - x:        Point(s) at which the function is evaluated.
    %       - x_max:    Point at which the function reaches its maximum value.
    %       - y_max:    Maximum value of the function.
    %       - x_min:    Point at which the function reaches its minimum value.
    %
    %% Note:
    %       The minimum value of the function is calculated as:
    %           y_min = -y_max((x_max - x_min)^2 - 1)
    %                   * exp(-(x_max - x_min)^2/((x_max - x_min)^2 - 1))
    %
    %% Examples:
    %       - y = Mexican_Hat_Function(0, 1, 1, -1)
    %       - y = Mexican_Hat_Function([0, 1], 1, 1, -1)
    %
    %% Copyright (C) 2023 Ljubomir Kurij <ljubomir_kurij@protonmail.com>
    %
    %% -------------------------------------------------------------------------
    fname = 'Mexican_Hat_Function';
    use_case_a = sprintf('- y = %s(x, x_max, y_max, x_min)', fname);

    % Check input arguments ----------------------------------------------------

    % Check number of input arguments
    if 4 ~= nargin
        error( ...
              'Invalid call to %s. Correct usage is:\n%s', ...
              fname, ...
              use_case_a ...
             );
    end  % End of if 4 ~= nargin

    % Check the type of the input arguments
    validateattributes( ...
                       x, ...
                       {'numeric'}, ...
                       {'nonempty', 'nonnan', 'finite', 'real', 'vector'}, ...
                       fname, ...
                       'x' ...
                      );
    validateattributes( ...
                       x_max, ...
                       {'numeric'}, ...
                       {'nonempty', 'nonnan', 'finite', 'real', 'scalar'}, ...
                       fname, ...
                       'x_max' ...
                      );
    validateattributes( ...
                       y_max, ...
                       {'numeric'}, ...
                       {'nonempty', 'nonnan', 'finite', 'real', 'scalar'}, ...
                       fname, ...
                       'y_max' ...
                      );
    validateattributes( ...
                       x_min, ...
                       {'numeric'}, ...
                       {'nonempty', 'nonnan', 'finite', 'real', 'scalar'}, ...
                       fname, ...
                       'x_min' ...
                      );

    % Do the calculation -------------------------------------------------------
    y = y_max .* (1 - (x - x_max).^2) ...
        .* exp(-(x - x_max).^2./(x_max - x_min)^2);

end  % End of function Mexican_Hat_Function

% End of file 'Mexican_Hat_Function.m'
